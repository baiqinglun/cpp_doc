# 15.3 野指针

> 为什么在析构函数中delete指针前要置为空？

在析构函数中释放指针所指向的内存空间时，将指针置为空的原因是防止出现**野指针**的问题。野指针是指在内存中已经被释放的指针。如果一个指针被释放，但它的值仍然存在，它将成为一个野指针。这时如果再次访问该指针所指向的内存，将会引发未定义行为，可能会导致程序崩溃。

因此，在使用delete释放指针所指向的内存之后，建议将指针设置为空指针，以避免程序中可能出现的野指针问题。这样可以避免在指针已经释放的情况下继续访问该指针，从而提高程序的健壮性和稳定性。

```c++
class Singleton
{
public:
    Singleton()
   {
      cout << "Singleton构造函数调用" << endl;
   };
   ~Singleton()
   {
      cout << "Singleton析构函数调用" << endl;
      singleton = nullptr;
      delete singleton;
   };
};
```
如果不加`singleton = nullptr;`而是直接delete会一直循环。
![](https://test-123456-md-images.oss-cn-beijing.aliyuncs.com/img/20230405144827.png)